version: '3.2'

services:

# Postres as a main storage
  db:
    restart: always
    image: postgres
    container_name: db
    # volumes:
    #   - ./pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    expose:
      - 5432
    environment:
      - POSTGRES_DB=uks
      - POSTGRES_PASSWORD=root
      - POSTGRES_USER=postgres


  web:
    image: 'uks_web:latest'
    build: 
      context: ./uks
    container_name: web
    depends_on:
      - db
    # links:
    #   - db:db
      #- redis
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/uks
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=root
      - SPRING_JPA_HIBERNATE_DDL_AUTO=create-drop
      - SPRING_PROFILES_ACTIVE=dev
      - TOKEN_SECRET=2aafbe15fde010e3a6de59e99c0adfd13bd40b60e3e5fdf351b263c3c7f72b35
    ports:
      - "8881:8881"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  # Nginx as a web server and reverse proxy
  # nginx:
  #   image: nginx
  #   container_name: uks_nginx
  #   ports:
  #     - "8080:8080"
  #   volumes:
  #     - ./config/nginx:/etc/nginx/conf.d
  #     - ./static:/code/app/static #must be same as web!
  #   depends_on:
  #     - web

  # # redis as a cache store
  # redis:
  #   image: redis
  #   container_name: uks_redis
  #   expose:
  #     - '6379'
